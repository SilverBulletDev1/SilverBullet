<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:inputToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
	xmlns:inputToolkitPrimitives="clr-namespace:System.Windows.Controls.Primitives;assembly=System.Windows.Controls.Input.Toolkit"
	xmlns:layoutToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Layout.Toolkit"
	xmlns:layoutToolkitPrimitives="clr-namespace:System.Windows.Controls.Primitives;assembly=System.Windows.Controls.Layout.Toolkit"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:vsm="clr-namespace:System.Windows;assembly=WPFToolkit">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary
			Source="Styles.WPF.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<SolidColorBrush
		x:Key="RatingReadOnlyBackgroundBrush"
		Color="{StaticResource Color_013}" />
	<SolidColorBrush
		x:Key="RatingReadOnlyBorderBrush"
		Color="{StaticResource Color_013}" />
	<SolidColorBrush
		x:Key="RatingDisabledBackgroundBrush"
		Color="{StaticResource Color_004}" />
	<SolidColorBrush
		x:Key="RatingDisabledBorderBrush"
		Color="{StaticResource Color_013}" />
	<SolidColorBrush
		x:Key="RatingItemBackgroundBrush"
		Color="{StaticResource Color_009}" />
	<SolidColorBrush
		x:Key="RatingItemBorderBrush"
		Color="{StaticResource Color_004}" />
	<SolidColorBrush
		x:Key="RatingItemHoverBackgroundBrush"
		Color="{StaticResource Color_023}" />
	<SolidColorBrush
		x:Key="RatingItemHoverBorderBrush"
		Color="{StaticResource Color_023}" />
	<SolidColorBrush
		x:Key="RatingItemActiveBackgroundBrush"
		Color="{StaticResource Color_024}" />
	<SolidColorBrush
		x:Key="RatingItemActiveBorderBrush"
		Color="{StaticResource Color_024}" />
	<SolidColorBrush
		x:Key="RatingItemReadOnlyBackgroundBrush"
		Color="{StaticResource Color_024}" />
	<SolidColorBrush
		x:Key="RatingItemReadOnlyBorderBrush"
		Color="{StaticResource Color_024}" />
	<SolidColorBrush
		x:Key="RatingItemDisabledBackgroundBrush"
		Color="{StaticResource Color_008}" />
	<SolidColorBrush
		x:Key="RatingItemDisabledBorderBrush"
		Color="{StaticResource Color_005}" />
	<SolidColorBrush
		x:Key="AccordionBorderBrush"
		Color="{StaticResource Color_004}" />
	<SolidColorBrush
		x:Key="AccordionBackgroundBrush"
		Color="{StaticResource Color_009}" />
	<SolidColorBrush
		x:Key="AccordionItemBackgroundBrush"
		Color="{StaticResource Color_009}" />
	<SolidColorBrush
		x:Key="AccordionButtonBackgroundBrush"
		Color="{StaticResource Color_009}" />
	<SolidColorBrush
		x:Key="AccordionButtonBorderBrush"
		Color="{StaticResource Color_004}" />
	<SolidColorBrush
		x:Key="AccordionButtonHoverBackgroundBrush"
		Color="{StaticResource Color_006}" />
	<SolidColorBrush
		x:Key="AccordionButtonHoverBorderBrush"
		Color="{StaticResource Color_003}" />
	<SolidColorBrush
		x:Key="AccordionButtonPressedBackgroundBrush"
		Color="{StaticResource Color_024}" />
	<SolidColorBrush
		x:Key="AccordionButtonPressedBorderBrush"
		Color="{StaticResource Color_024}" />
	<SolidColorBrush
		x:Key="AccordionButtonExpandedBackgroundBrush"
		Color="{StaticResource Color_024}" />
	<SolidColorBrush
		x:Key="AccordionButtonExpandedBorderBrush"
		Color="{StaticResource Color_024}" />
	<SolidColorBrush
		x:Key="AccordionArrowBackgroundBrush"
		Color="{StaticResource Color_003}" />
	<SolidColorBrush
		x:Key="AccordionArrowExpandedBackgroundBrush"
		Color="{StaticResource Color_009}" />
	<Style
		x:Key="RatingItemStyle"
		TargetType="{x:Type inputToolkit:RatingItem}">
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type inputToolkit:RatingItem}">
					<Grid
						Width="30"
						Margin="2,0"
						Background="{TemplateBinding Control.Background}">
						<Grid.RowDefinitions>
							<RowDefinition
								Height="30" />
							<RowDefinition
								Height="Auto" />
						</Grid.RowDefinitions>
						<Border
							BorderThickness="0"
							Background="{StaticResource TransparentBrush}" />
						<Rectangle
							Margin="-2,0"
							Fill="{StaticResource TransparentBrush}" />
						<Path
							x:Name="DefaultRatingItem"
							VerticalAlignment="Stretch"
							Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 Z"
							Opacity="1"
							Stretch="Fill"
							StrokeLineJoin="Round"
							StrokeThickness="0.4"
							UseLayoutRounding="False"
							Fill="{StaticResource RatingItemBackgroundBrush}"
							Stroke="{StaticResource RatingItemBorderBrush}" />
						<inputToolkitPrimitives:LinearClipper
							ExpandDirection="Right"
							RatioVisible="{TemplateBinding inputToolkit:RatingItem.DisplayValue}">
							<Path
								VerticalAlignment="Stretch"
								Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 Z"
								Fill="{TemplateBinding Control.Foreground}"
								Opacity="1"
								Stretch="Fill"
								StrokeLineJoin="Round"
								UseLayoutRounding="False"
								Stroke="{x:Null}" />
						</inputToolkitPrimitives:LinearClipper>
						<Path
							x:Name="MouseOverRatingItem"
							VerticalAlignment="Stretch"
							Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 Z"
							Opacity="0"
							Stretch="Fill"
							StrokeLineJoin="Round"
							StrokeThickness="0.4"
							UseLayoutRounding="False"
							Fill="{StaticResource RatingItemHoverBackgroundBrush}"
							Stroke="{StaticResource RatingItemHoverBorderBrush}" />
						<Path
							x:Name="PressedRatingItem"
							VerticalAlignment="Stretch"
							Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 Z"
							Opacity="0"
							Stretch="Fill"
							StrokeLineJoin="Round"
							UseLayoutRounding="False"
							Fill="{StaticResource RatingItemActiveBackgroundBrush}"
							Stroke="{StaticResource RatingItemActiveBorderBrush}" />
						<Path
							x:Name="ReadOnlyRatingItem"
							VerticalAlignment="Stretch"
							Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 Z"
							IsHitTestVisible="False"
							Opacity="0"
							Stretch="Fill"
							StrokeLineJoin="Round"
							StrokeThickness="0.4"
							UseLayoutRounding="False"
							Fill="{StaticResource RatingItemReadOnlyBackgroundBrush}"
							Stroke="{StaticResource RatingItemReadOnlyBorderBrush}" />
						<Path
							x:Name="DisabledRatingItemBackground"
							VerticalAlignment="Stretch"
							Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 Z"
							Opacity="0"
							Stretch="Fill"
							StrokeLineJoin="Round"
							UseLayoutRounding="False"
							Fill="{StaticResource RatingItemDisabledBackgroundBrush}"
							Stroke="{StaticResource RatingItemDisabledBorderBrush}" />
						<inputToolkitPrimitives:LinearClipper
							x:Name="DisabledRatingItem"
							ExpandDirection="Right"
							Opacity="0"
							RatioVisible="{TemplateBinding inputToolkit:RatingItem.DisplayValue}">
							<Path
								VerticalAlignment="Stretch"
								Data="M15,0 L18.6,11.373603 L30,11.459046 L20.824955,18.573566 L24.270519,30 L15,23.023449 L5.7294912,30 L9.1750822,18.573566 L0,11.459046 L11.399999,11.373603 Z"
								Opacity="1"
								Stretch="Fill"
								StrokeLineJoin="Round"
								UseLayoutRounding="False"
								Fill="{StaticResource RatingItemDisabledBackgroundBrush}"
								Stroke="{StaticResource RatingItemDisabledBorderBrush}" />
						</inputToolkitPrimitives:LinearClipper>
						<ContentPresenter
							x:Name="Content"
							Grid.Row="1"
							Grid.RowSpan="2"
							Margin="{TemplateBinding Control.Padding}"
							HorizontalAlignment="Left"
							ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
							Cursor="{TemplateBinding FrameworkElement.Cursor}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								TargetName="MouseOverRatingItem"
								Property="UIElement.Opacity"
								Value="1" />
						</Trigger>
						<Trigger
							Property="IsPressed"
							Value="True">
							<Setter
								TargetName="PressedRatingItem"
								Property="UIElement.Opacity"
								Value="1" />
						</Trigger>
						<Trigger
							Property="IsEnabled"
							Value="False">
							<Setter
								TargetName="DisabledRatingItem"
								Property="UIElement.Opacity"
								Value="1" />
							<Setter
								TargetName="DisabledRatingItemBackground"
								Property="UIElement.Opacity"
								Value="1" />
						</Trigger>
						<Trigger
							Property="inputToolkit:RatingItem.IsReadOnly"
							Value="True">
							<Setter
								TargetName="ReadOnlyRatingItem"
								Property="UIElement.Opacity"
								Value="0.7" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		x:Key="RatingStyle"
		TargetType="{x:Type inputToolkit:Rating}">
		<Setter
			Property="Foreground"
			Value="{StaticResource RatingItemActiveBackgroundBrush}" />
		<Setter
			Property="Background"
			Value="{StaticResource TransparentBrush}" />
		<Setter
			Property="BorderBrush"
			Value="{StaticResource TransparentBrush}" />
		<Setter
			Property="BorderThickness"
			Value="0" />
		<Setter
			Property="ItemContainerStyle"
			Value="{StaticResource RatingItemStyle}" />
		<Setter
			Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel
						IsItemsHost="True"
						Orientation="Horizontal" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type inputToolkit:Rating}">
					<Grid
						x:Name="Root">
						<Border
							Background="{TemplateBinding Control.Background}"
							BorderBrush="{TemplateBinding Control.BorderBrush}"
							BorderThickness="{TemplateBinding Control.BorderThickness}">
							<ItemsPresenter />
						</Border>
						<Border
							x:Name="ReadOnlyVisualElement"
							BorderThickness="{TemplateBinding Control.BorderThickness}"
							IsHitTestVisible="False"
							Opacity="0"
							Background="{StaticResource RatingReadOnlyBackgroundBrush}"
							BorderBrush="{StaticResource RatingReadOnlyBorderBrush}" />
						<Border
							x:Name="DisabledVisualElement"
							BorderThickness="{TemplateBinding Control.BorderThickness}"
							IsHitTestVisible="False"
							Opacity="0"
							Background="{StaticResource RatingDisabledBackgroundBrush}"
							BorderBrush="{StaticResource RatingDisabledBorderBrush}" />
						<Rectangle
							x:Name="FocusVisualElement"
							IsHitTestVisible="False"
							RadiusX="1"
							RadiusY="1"
							StrokeThickness="1"
							Visibility="Collapsed" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger
							Property="inputToolkit:Rating.IsReadOnly"
							Value="True">
							<Setter
								TargetName="ReadOnlyVisualElement"
								Property="UIElement.Opacity"
								Value="0.03" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		x:Key="AccordionButtonStyle"
		TargetType="{x:Type layoutToolkitPrimitives:AccordionButton}">
		<Setter
			Property="FontFamily"
			Value="Segoe UI" />
		<Setter
			Property="FontSize"
			Value="14.667" />
		<Setter
			Property="Foreground"
			Value="{StaticResource LightForegroundBrush}" />
		<Setter
			Property="Background"
			Value="{StaticResource AccordionButtonBackgroundBrush}" />
		<Setter
			Property="BorderBrush"
			Value="{StaticResource AccordionButtonBorderBrush}" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="Padding"
			Value="5,7" />
		<Setter
			Property="MinHeight"
			Value="30" />
		<Setter
			Property="HorizontalAlignment"
			Value="Stretch" />
		<Setter
			Property="VerticalAlignment"
			Value="Stretch" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Center" />
		<Setter
			Property="VerticalContentAlignment"
			Value="Center" />
		<Setter
			Property="IsTabStop"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type layoutToolkitPrimitives:AccordionButton}">
					<Grid
						Margin="{TemplateBinding Control.Padding}"
						Background="{StaticResource TransparentBrush}">
						<Border>
							<Grid>
								<Border
									x:Name="Background"
									Height="Auto"
									Margin="0"
									VerticalAlignment="Stretch"
									Background="{TemplateBinding Control.Background}"
									BorderBrush="{TemplateBinding Control.BorderBrush}"
									BorderThickness="{TemplateBinding Control.BorderThickness}" />
								<Border
									x:Name="ExpandedBackground"
									Height="Auto"
									Margin="0"
									VerticalAlignment="Stretch"
									BorderThickness="{TemplateBinding Control.BorderThickness}"
									Opacity="0"
									Background="{StaticResource AccordionButtonExpandedBackgroundBrush}"
									BorderBrush="{StaticResource AccordionButtonExpandedBorderBrush}" />
								<Border
									x:Name="MouseOverBackground"
									Height="Auto"
									Margin="0"
									VerticalAlignment="Stretch"
									BorderThickness="{TemplateBinding Control.BorderThickness}"
									Opacity="0"
									Background="{StaticResource AccordionButtonHoverBackgroundBrush}"
									BorderBrush="{StaticResource AccordionButtonHoverBorderBrush}" />
								<Border
									x:Name="PressedBackground"
									Height="Auto"
									Margin="0"
									VerticalAlignment="Stretch"
									BorderThickness="{TemplateBinding Control.BorderThickness}"
									Opacity="0"
									Background="{StaticResource AccordionButtonPressedBackgroundBrush}"
									BorderBrush="{StaticResource AccordionButtonPressedBorderBrush}" />
								<Grid
									Background="{StaticResource TransparentBrush}">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											x:Name="cd0"
											Width="Auto" />
										<ColumnDefinition
											x:Name="cd1"
											Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition
											x:Name="rd0"
											Height="Auto" />
										<RowDefinition
											x:Name="rd1"
											Height="Auto" />
									</Grid.RowDefinitions>
									<Grid
										x:Name="icon"
										Row="0"
										Column="0"
										Width="19"
										Height="19"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										RenderTransformOrigin="0.5,0.5">
										<UIElement.RenderTransform>
											<TransformGroup>
												<ScaleTransform />
												<SkewTransform />
												<RotateTransform
													Angle="-90" />
												<TranslateTransform />
											</TransformGroup>
										</UIElement.RenderTransform>
										<Path
											x:Name="arrow"
											Width="Auto"
											Height="4"
											Margin="0,0,0,0"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Data="F1 M301.14,-189.041 L311.57,-189.041 L306.355,-182.942 L301.14,-189.041 Z"
											RenderTransformOrigin="0.5,0.5"
											Stretch="Uniform"
											Fill="{StaticResource AccordionArrowBackgroundBrush}">
											<UIElement.RenderTransform>
												<TransformGroup>
													<ScaleTransform />
													<SkewTransform />
													<RotateTransform />
													<TranslateTransform />
												</TransformGroup>
											</UIElement.RenderTransform>
										</Path>
									</Grid>
									<ContentControl
										x:Name="contentControl"
										Grid.Row="0"
										Grid.RowSpan="1"
										Grid.Column="1"
										Margin="6,6,6,0"
										HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}">
										<ContentPresenter
											x:Name="header"
											Content="{TemplateBinding ContentControl.Content}"
											ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" />
									</ContentControl>
								</Grid>
							</Grid>
						</Border>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup
								x:Name="ExpandDirectionStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition
										GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState
									x:Name="ExpandDown">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="icon"
											Storyboard.TargetProperty="(Grid.Column)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>0</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="icon"
											Storyboard.TargetProperty="(Grid.Row)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>0</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="header"
											Storyboard.TargetProperty="(Grid.Column)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="header"
											Storyboard.TargetProperty="(Grid.Row)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>0</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="cd0"
											Storyboard.TargetProperty="Width"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<GridLength>Auto</GridLength>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="cd1"
											Storyboard.TargetProperty="Width"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation
											BeginTime="00:00:00"
											Storyboard.TargetName="arrow"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
											To="-90"
											Duration="00:00:00" />
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState
									x:Name="ExpandUp">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="icon"
											Storyboard.TargetProperty="(Grid.Column)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="icon"
											Storyboard.TargetProperty="(Grid.Row)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="header"
											Storyboard.TargetProperty="(Grid.Column)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>0</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="header"
											Storyboard.TargetProperty="(Grid.Row)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="cd0"
											Storyboard.TargetProperty="Width"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="cd1"
											Storyboard.TargetProperty="Width"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<GridLength>Auto</GridLength>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation
											BeginTime="00:00:00"
											Storyboard.TargetName="arrow"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
											To="90"
											Duration="00:00:00" />
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState
									x:Name="ExpandLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="icon"
											Storyboard.TargetProperty="(Grid.Column)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="icon"
											Storyboard.TargetProperty="(Grid.Row)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>0</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="header"
											Storyboard.TargetProperty="(Grid.Column)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="header"
											Storyboard.TargetProperty="(Grid.Row)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="rd0"
											Storyboard.TargetProperty="Height"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<GridLength>Auto</GridLength>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="rd1"
											Storyboard.TargetProperty="Height"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="header"
											Storyboard.TargetProperty="LayoutTransform"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<TransformGroup>
														<RotateTransform
															Angle="90" />
													</TransformGroup>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation
											BeginTime="00:00:00"
											Storyboard.TargetName="arrow"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
											To="0"
											Duration="00:00:00" />
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState
									x:Name="ExpandRight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="icon"
											Storyboard.TargetProperty="(Grid.Column)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>0</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="icon"
											Storyboard.TargetProperty="(Grid.Row)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="header"
											Storyboard.TargetProperty="(Grid.Column)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>0</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="header"
											Storyboard.TargetProperty="(Grid.Row)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>0</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="rd0"
											Storyboard.TargetProperty="Height"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="rd1"
											Storyboard.TargetProperty="Height"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<GridLength>Auto</GridLength>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="0"
											Storyboard.TargetName="header"
											Storyboard.TargetProperty="LayoutTransform"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<TransformGroup>
														<RotateTransform
															Angle="-90" />
													</TransformGroup>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation
											BeginTime="00:00:00"
											Storyboard.TargetName="arrow"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
											To="180"
											Duration="00:00:00" />
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup
								x:Name="ExpansionStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition
										GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState
									x:Name="Collapsed">
									<Storyboard>
										<DoubleAnimation
											BeginTime="00:00:00"
											Storyboard.TargetName="icon"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
											To="0"
											Duration="00:00:00.3" />
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState
									x:Name="Expanded">
									<Storyboard>
										<DoubleAnimation
											BeginTime="00:00:00"
											Storyboard.TargetName="icon"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
											To="90"
											Duration="00:00:00.3" />
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="arrow"
											Storyboard.TargetProperty="(Path.Fill)">
											<DiscreteObjectKeyFrame
												KeyTime="0"
												Value="{StaticResource AccordionArrowExpandedBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Storyboard.TargetName="ExpandedBackground"
											Storyboard.TargetProperty="(UIElement.Opacity)"
											Duration="00:00:00.0010000">
											<SplineDoubleKeyFrame
												KeyTime="00:00:00"
												Value="1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup
								x:Name="CheckStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition
										GeneratedDuration="00:00:00" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState
									x:Name="Checked" />
								<vsm:VisualState
									x:Name="Unchecked" />
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup
								x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition
										GeneratedDuration="0" />
									<vsm:VisualTransition
										GeneratedDuration="00:00:00.1"
										From="MouseOver"
										To="Normal" />
									<vsm:VisualTransition
										GeneratedDuration="00:00:00.1"
										To="MouseOver" />
									<vsm:VisualTransition
										GeneratedDuration="00:00:00.1"
										To="Pressed" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState
									x:Name="Normal" />
								<vsm:VisualState
									x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Storyboard.TargetName="MouseOverBackground"
											Storyboard.TargetProperty="(UIElement.Opacity)"
											Duration="00:00:00.0010000">
											<SplineDoubleKeyFrame
												KeyTime="00:00:00"
												Value="1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState
									x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Storyboard.TargetName="PressedBackground"
											Storyboard.TargetProperty="(UIElement.Opacity)"
											Duration="00:00:00.0010000">
											<SplineDoubleKeyFrame
												KeyTime="00:00:00"
												Value="1" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="arrow"
											Storyboard.TargetProperty="(Path.Fill)">
											<DiscreteObjectKeyFrame
												KeyTime="0"
												Value="{StaticResource AccordionArrowExpandedBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState
									x:Name="Disabled">
									<Storyboard />
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup
								x:Name="FocusStates">
								<vsm:VisualState
									x:Name="Focused" />
								<vsm:VisualState
									x:Name="Unfocused" />
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		x:Key="ExpandableContentControlStyle"
		TargetType="{x:Type layoutToolkitPrimitives:ExpandableContentControl}">
		<Setter
			Property="FontFamily"
			Value="Segoe UI" />
		<Setter
			Property="FontSize"
			Value="13.333" />
		<Setter
			Property="BorderThickness"
			Value="0" />
		<Setter
			Property="Padding"
			Value="15,7" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Left" />
		<Setter
			Property="VerticalContentAlignment"
			Value="Top" />
		<Setter
			Property="IsEnabled"
			Value="True" />
		<Setter
			Property="FrameworkElement.Cursor"
			Value="Arrow" />
		<Setter
			Property="IsTabStop"
			Value="False" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type layoutToolkitPrimitives:ExpandableContentControl}">
					<ContentPresenter
						x:Name="ContentSite"
						Margin="{TemplateBinding Control.Padding}"
						HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
						VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
						ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
						Cursor="{TemplateBinding FrameworkElement.Cursor}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		x:Key="AccordionItemStyle"
		TargetType="{x:Type layoutToolkit:AccordionItem}">
		<Setter
			Property="FontFamily"
			Value="Segoe UI" />
		<Setter
			Property="FontSize"
			Value="14.667" />
		<Setter
			Property="Foreground"
			Value="{StaticResource ForegroundBrush}" />
		<Setter
			Property="Background"
			Value="{StaticResource AccordionItemBackgroundBrush}" />
		<Setter
			Property="BorderThickness"
			Value="0" />
		<Setter
			Property="MinHeight"
			Value="30" />
		<Setter
			Property="Margin"
			Value="0" />
		<Setter
			Property="HorizontalAlignment"
			Value="Stretch" />
		<Setter
			Property="VerticalAlignment"
			Value="Stretch" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Left" />
		<Setter
			Property="VerticalContentAlignment"
			Value="Top" />
		<Setter
			Property="IsTabStop"
			Value="False" />
		<Setter
			Property="layoutToolkit:AccordionItem.AccordionButtonStyle"
			Value="{StaticResource AccordionButtonStyle}" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type layoutToolkit:AccordionItem}">
					<Grid
						HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}"
						VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}"
						Background="{TemplateBinding Control.Background}">
						<Border
							x:Name="Background"
							Padding="{TemplateBinding Control.Padding}"
							BorderBrush="{TemplateBinding Control.BorderBrush}"
							BorderThickness="{TemplateBinding Control.BorderThickness}">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition
										x:Name="rd0"
										Height="Auto" />
									<RowDefinition
										x:Name="rd1"
										Height="Auto" />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition
										x:Name="cd0"
										Width="Auto" />
									<ColumnDefinition
										x:Name="cd1"
										Width="Auto" />
								</Grid.ColumnDefinitions>
								<layoutToolkitPrimitives:AccordionButton
									Name="ExpanderButton"
									Grid.Row="0"
									Margin="0,0,0,0"
									Padding="0,0,0,0"
									HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}"
									VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}"
									HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
									VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
									Content="{TemplateBinding HeaderedContentControl.Header}"
									ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
									IsChecked="{TemplateBinding layoutToolkit:AccordionItem.IsSelected}"
									IsTabStop="True" />
								<layoutToolkitPrimitives:ExpandableContentControl
									Name="ExpandSite"
									Grid.Row="1"
									Margin="0,0,0,0"
									HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}"
									VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}"
									HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
									VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
									Content="{TemplateBinding ContentControl.Content}"
									ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
									FontFamily="{TemplateBinding Control.FontFamily}"
									FontSize="{TemplateBinding Control.FontSize}"
									FontStretch="{TemplateBinding Control.FontStretch}"
									FontStyle="{TemplateBinding Control.FontStyle}"
									FontWeight="{TemplateBinding Control.FontWeight}"
									Foreground="{TemplateBinding Control.Foreground}"
									IsTabStop="False"
									Percentage="0"
									RevealMode="{TemplateBinding layoutToolkit:AccordionItem.ExpandDirection}"
									Style="{StaticResource ExpandableContentControlStyle}" />
							</Grid>
						</Border>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup
								x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition
										GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState
									x:Name="Normal" />
								<vsm:VisualState
									x:Name="Pressed" />
								<vsm:VisualState
									x:Name="MouseOver" />
								<vsm:VisualState
									x:Name="Disabled" />
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup
								x:Name="FocusStates">
								<vsm:VisualState
									x:Name="Focused" />
								<vsm:VisualState
									x:Name="Unfocused" />
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup
								x:Name="ExpansionStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition
										GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState
									x:Name="Collapsed">
									<Storyboard
										x:Name="AccordionItemCollapsedStoryboard">
										<DoubleAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Storyboard.TargetName="ExpandSite"
											Storyboard.TargetProperty="(layoutToolkitPrimitives:ExpandableContentControl.Percentage)">
											<SplineDoubleKeyFrame
												KeySpline="0.2,0,0,1"
												KeyTime="00:00:00.3"
												Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="00:00:00.3"
											Storyboard.TargetName="ExpandSite"
											Storyboard.TargetProperty="(UIElement.Visibility)"
											Duration="00:00:00">
											<DiscreteObjectKeyFrame
												KeyTime="00:00:00">
												<ObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState
									x:Name="Expanded">
									<Storyboard
										x:Name="AccordionItemExpandedStoryboard">
										<DoubleAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Storyboard.TargetName="ExpandSite"
											Storyboard.TargetProperty="(layoutToolkitPrimitives:ExpandableContentControl.Percentage)">
											<SplineDoubleKeyFrame
												KeySpline="0.2,0,0,1"
												KeyTime="00:00:00.3"
												Value="1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup
								x:Name="LockedStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition
										GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState
									x:Name="Locked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ExpanderButton"
											Storyboard.TargetProperty="IsEnabled"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Boolean>False</sys:Boolean>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState
									x:Name="Unlocked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ExpanderButton"
											Storyboard.TargetProperty="IsEnabled"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Boolean>True</sys:Boolean>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup
								x:Name="ExpandDirectionStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition
										GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState
									x:Name="ExpandDown">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="rd1"
											Storyboard.TargetProperty="Height"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="cd0"
											Storyboard.TargetProperty="Width"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState
									x:Name="ExpandUp">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ExpanderButton"
											Storyboard.TargetProperty="(Grid.Row)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ExpandSite"
											Storyboard.TargetProperty="(Grid.Row)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>0</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="rd0"
											Storyboard.TargetProperty="Height"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="cd0"
											Storyboard.TargetProperty="Width"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState
									x:Name="ExpandLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ExpanderButton"
											Storyboard.TargetProperty="(Grid.ColumnSpan)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ExpandSite"
											Storyboard.TargetProperty="(Grid.ColumnSpan)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ExpanderButton"
											Storyboard.TargetProperty="(Grid.RowSpan)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>2</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ExpandSite"
											Storyboard.TargetProperty="(Grid.RowSpan)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>2</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ExpanderButton"
											Storyboard.TargetProperty="(Grid.Column)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ExpandSite"
											Storyboard.TargetProperty="(Grid.Row)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>0</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="rd0"
											Storyboard.TargetProperty="Height"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="cd0"
											Storyboard.TargetProperty="Width"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState
									x:Name="ExpandRight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ExpanderButton"
											Storyboard.TargetProperty="(Grid.ColumnSpan)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ExpandSite"
											Storyboard.TargetProperty="(Grid.ColumnSpan)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ExpanderButton"
											Storyboard.TargetProperty="(Grid.RowSpan)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>2</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ExpandSite"
											Storyboard.TargetProperty="(Grid.RowSpan)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>2</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ExpandSite"
											Storyboard.TargetProperty="(Grid.Row)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>0</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ExpandSite"
											Storyboard.TargetProperty="(Grid.Column)"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Int32>1</sys:Int32>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="rd0"
											Storyboard.TargetProperty="Height"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="cd1"
											Storyboard.TargetProperty="Width"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<GridLength>*</GridLength>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		x:Key="AccordionStyle"
		TargetType="{x:Type layoutToolkit:Accordion}">
		<Setter
			Property="BorderBrush"
			Value="{StaticResource AccordionBorderBrush}" />
		<Setter
			Property="Background"
			Value="{StaticResource AccordionBackgroundBrush}" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="Padding"
			Value="0" />
		<Setter
			Property="Margin"
			Value="0" />
		<Setter
			Property="HorizontalAlignment"
			Value="Left" />
		<Setter
			Property="VerticalAlignment"
			Value="Top" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Left" />
		<Setter
			Property="VerticalContentAlignment"
			Value="Top" />
		<Setter
			Property="FrameworkElement.Cursor"
			Value="Arrow" />
		<Setter
			Property="IsTabStop"
			Value="False" />
		<Setter
			Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel
						VerticalAlignment="Top" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type layoutToolkit:Accordion}">
					<Grid
						x:Name="Root">
						<Border
							x:Name="Border"
							Padding="{TemplateBinding Control.Padding}"
							Background="{TemplateBinding Control.Background}"
							BorderBrush="{TemplateBinding Control.BorderBrush}"
							BorderThickness="{TemplateBinding Control.BorderThickness}">
							<ScrollViewer
								Margin="0"
								Padding="0"
								BorderThickness="0"
								HorizontalScrollBarVisibility="Disabled"
								IsTabStop="False"
								VerticalScrollBarVisibility="Disabled"
								BorderBrush="{StaticResource TransparentBrush}"
								Background="{x:Null}">
								<ItemsPresenter />
							</ScrollViewer>
						</Border>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup
								x:Name="CommonStates">
								<vsm:VisualState
									x:Name="Normal" />
								<vsm:VisualState
									x:Name="Pressed" />
								<vsm:VisualState
									x:Name="MouseOver" />
								<vsm:VisualState
									x:Name="Disabled" />
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup
								x:Name="FocusStates">
								<vsm:VisualState
									x:Name="Focused" />
								<vsm:VisualState
									x:Name="Unfocused" />
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		x:Key="AutoCompleteBoxStyle"
		TargetType="{x:Type inputToolkit:AutoCompleteBox}">
		<Setter
			Property="FontFamily"
			Value="Segoe UI" />
		<Setter
			Property="FontSize"
			Value="14.667" />
		<Setter
			Property="Foreground"
			Value="{StaticResource ForegroundBrush}" />
		<Setter
			Property="Background"
			Value="{StaticResource TextBoxBackgroundBrush}" />
		<Setter
			Property="BorderBrush"
			Value="{StaticResource TextBoxBorderBrush}" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="Padding"
			Value="6,4" />
		<Setter
			Property="MinHeight"
			Value="30" />
		<Setter
			Property="MinWidth"
			Value="90" />
		<Setter
			Property="IsTabStop"
			Value="False" />
		<Setter
			Property="inputToolkit:AutoCompleteBox.TextBoxStyle"
			Value="{StaticResource TextBoxStyle}" />
		<Setter
			Property="Validation.ErrorTemplate"
			Value="{StaticResource ValidationToolTipTemplate}" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type inputToolkit:AutoCompleteBox}">
					<Grid
						Opacity="{TemplateBinding UIElement.Opacity}">
						<TextBox
							x:Name="Text"
							Margin="0"
							Padding="{TemplateBinding Control.Padding}"
							Background="{TemplateBinding Control.Background}"
							BorderBrush="{TemplateBinding Control.BorderBrush}"
							BorderThickness="{TemplateBinding Control.BorderThickness}"
							Foreground="{TemplateBinding Control.Foreground}"
							IsTabStop="True"
							Style="{TemplateBinding inputToolkit:AutoCompleteBox.TextBoxStyle}" />
						<Border
							x:Name="ValidationErrorElement"
							BorderThickness="{TemplateBinding Control.BorderThickness}"
							Visibility="Collapsed"
							BorderBrush="{StaticResource ValidationErrorElement}">
							<ToolTipService.ToolTip>
								<ToolTip
									x:Name="validationTooltip"
									Placement="Right"
									Template="{StaticResource ValidationToolTipTemplate}"
									DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
							</ToolTipService.ToolTip>
							<Grid
								Width="12"
								Height="12"
								Margin="1,-4,-4,0"
								HorizontalAlignment="Right"
								VerticalAlignment="Top"
								Background="#00FFFFFF">
								<Path
									Margin="1,3,0,0"
									Data="M1,0 L6,0 A2,2 90 0 1 8,2L8,7 Z"
									Fill="{StaticResource ValidationErrorElement}" />
								<Path
									Margin="1,3,0,0"
									Data="M0,0 L2,0 L8,6 L8,8"
									Fill="{StaticResource LightForegroundBrush}" />
							</Grid>
						</Border>
						<Popup
							x:Name="Popup"
							AllowsTransparency="True">
							<Grid
								Opacity="{TemplateBinding UIElement.Opacity}">
								<Border
									x:Name="PopupBorder"
									HorizontalAlignment="Stretch"
									BorderThickness="0">
									<UIElement.RenderTransform>
										<TranslateTransform
											X="1"
											Y="1" />
									</UIElement.RenderTransform>
									<Border
										Padding="0"
										HorizontalAlignment="Stretch"
										BorderBrush="{TemplateBinding Control.BorderBrush}"
										BorderThickness="{TemplateBinding Control.BorderThickness}"
										CornerRadius="0"
										Opacity="1.0">
										<UIElement.RenderTransform>
											<TransformGroup>
												<TranslateTransform
													X="-1"
													Y="-1" />
											</TransformGroup>
										</UIElement.RenderTransform>
										<ListBox
											x:Name="Selector"
											Background="{TemplateBinding Control.Background}"
											BorderThickness="0"
											Foreground="{TemplateBinding Control.Foreground}"
											ItemContainerStyle="{TemplateBinding inputToolkit:AutoCompleteBox.ItemContainerStyle}"
											ItemTemplate="{TemplateBinding inputToolkit:AutoCompleteBox.ItemTemplate}"
											ScrollViewer.HorizontalScrollBarVisibility="Auto"
											ScrollViewer.VerticalScrollBarVisibility="Auto" />
									</Border>
								</Border>
							</Grid>
						</Popup>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup
								x:Name="ValidationStates">
								<vsm:VisualState
									x:Name="Valid" />
								<vsm:VisualState
									x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ValidationErrorElement"
											Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState
									x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ValidationErrorElement"
											Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="validationTooltip"
											Storyboard.TargetProperty="IsOpen">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Boolean>True</sys:Boolean>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger
							Property="Validation.HasError"
							Value="True">
							<Setter
								TargetName="ValidationErrorElement"
								Property="Visibility"
								Value="Visible" />
							<Setter
								TargetName="validationTooltip"
								Property="UIElement.IsHitTestVisible"
								Value="True" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition
									Property="Validation.HasError"
									Value="True" />
								<Condition
									Property="UIElement.IsKeyboardFocusWithin"
									Value="True" />
							</MultiTrigger.Conditions>
							<Setter
								TargetName="ValidationErrorElement"
								Property="Visibility"
								Value="Visible" />
							<Setter
								TargetName="validationTooltip"
								Property="ToolTip.IsOpen"
								Value="True" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		x:Key="{x:Type inputToolkit:RatingItem}"
		BasedOn="{StaticResource RatingItemStyle}"
		TargetType="{x:Type inputToolkit:RatingItem}" />
	<Style
		x:Key="{x:Type inputToolkit:Rating}"
		BasedOn="{StaticResource RatingStyle}"
		TargetType="{x:Type inputToolkit:Rating}" />
	<Style
		x:Key="{x:Type layoutToolkitPrimitives:AccordionButton}"
		BasedOn="{StaticResource AccordionButtonStyle}"
		TargetType="{x:Type layoutToolkitPrimitives:AccordionButton}" />
	<Style
		x:Key="{x:Type layoutToolkit:AccordionItem}"
		BasedOn="{StaticResource AccordionItemStyle}"
		TargetType="{x:Type layoutToolkit:AccordionItem}" />
	<Style
		x:Key="{x:Type layoutToolkit:Accordion}"
		BasedOn="{StaticResource AccordionStyle}"
		TargetType="{x:Type layoutToolkit:Accordion}" />
	<Style
		x:Key="{x:Type inputToolkit:AutoCompleteBox}"
		BasedOn="{StaticResource AutoCompleteBoxStyle}"
		TargetType="{x:Type inputToolkit:AutoCompleteBox}" />
</ResourceDictionary>
