<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:System="clr-namespace:System;assembly=mscorlib"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary
			Source="Theme.Colors.xaml" />
		<ResourceDictionary
			Source="Styles.Shared.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<Style
		x:Key="ScrollBarButtonStyle"
		TargetType="{x:Type RepeatButton}">
		<Setter
			Property="MinWidth"
			Value="30" />
		<Setter
			Property="MinHeight"
			Value="30" />
		<Setter
			Property="Padding"
			Value="0" />
		<Setter
			Property="FrameworkElement.OverridesDefaultStyle"
			Value="True" />
		<Setter
			Property="Focusable"
			Value="False" />
		<Setter
			Property="IsTabStop"
			Value="False" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type RepeatButton}">
					<Grid
						x:Name="grid1">
						<Rectangle
							Margin="-5"
							Fill="{StaticResource TransparentBrush}" />
						<Path
							x:Name="Arrow"
							Width="10"
							Height="6"
							Margin="{TemplateBinding Control.Padding}"
							Data="F1 M541.537,173.589 L531.107,173.589 L536.322,167.49 L541.537,173.589 Z"
							Stretch="Uniform"
							Fill="{StaticResource ScrollbarPageButtonArrowBackgroundBrush}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup
								x:Name="CommonStates">
								<VisualState
									x:Name="Normal" />
								<VisualState
									x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="Arrow"
											Storyboard.TargetProperty="Fill"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0"
												Value="{StaticResource ScrollbarPageButtonArrowHoverBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="Arrow"
											Storyboard.TargetProperty="Fill"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0"
												Value="{StaticResource ScrollbarPageButtonArrowPressedBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="Arrow"
											Storyboard.TargetProperty="Fill"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0"
												Value="{StaticResource ScrollbarPageButtonArrowDisabledBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		x:Key="ScrollBarPageButtonStyle"
		TargetType="{x:Type RepeatButton}">
		<Setter
			Property="FrameworkElement.OverridesDefaultStyle"
			Value="True" />
		<Setter
			Property="Background"
			Value="#00FFFFFF" />
		<Setter
			Property="Focusable"
			Value="False" />
		<Setter
			Property="IsTabStop"
			Value="False" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type RepeatButton}">
					<Rectangle
						Width="{TemplateBinding FrameworkElement.Width}"
						Height="{TemplateBinding FrameworkElement.Height}"
						Fill="{TemplateBinding Control.Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup
								x:Name="CommonStates">
								<VisualState
									x:Name="Normal" />
								<VisualState
									x:Name="MouseOver" />
								<VisualState
									x:Name="Pressed" />
								<VisualState
									x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Rectangle>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		x:Key="HScrollBarThumbStyle"
		TargetType="{x:Type Thumb}">
		<Setter
			Property="MinWidth"
			Value="20" />
		<Setter
			Property="MinHeight"
			Value="30" />
		<Setter
			Property="FrameworkElement.OverridesDefaultStyle"
			Value="True" />
		<Setter
			Property="IsTabStop"
			Value="False" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type Thumb}">
					<Grid
						Margin="0">
						<Rectangle
							Margin="-5"
							Fill="{StaticResource TransparentBrush}" />
						<Rectangle
							x:Name="Thumb"
							Height="8"
							Margin="1"
							Fill="{StaticResource HScrollbarThumbBackgroundBrush}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup
								x:Name="CommonStates">
								<VisualState
									x:Name="Normal" />
								<VisualState
									x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="Thumb"
											Storyboard.TargetProperty="Fill"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0"
												Value="{StaticResource HScrollbarThumbHoverBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="Thumb"
											Storyboard.TargetProperty="Fill"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0"
												Value="{StaticResource HScrollbarThumbPressedBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="Thumb"
											Storyboard.TargetProperty="Fill"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0"
												Value="{StaticResource HScrollbarThumbDisabledBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		x:Key="VScrollBarThumbStyle"
		TargetType="{x:Type Thumb}">
		<Setter
			Property="FrameworkElement.OverridesDefaultStyle"
			Value="True" />
		<Setter
			Property="MinWidth"
			Value="30" />
		<Setter
			Property="MinHeight"
			Value="20" />
		<Setter
			Property="Stylus.IsPressAndHoldEnabled"
			Value="False" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type Thumb}">
					<Grid
						x:Name="grid"
						Width="Auto"
						Height="Auto">
						<Rectangle
							Margin="-5"
							Fill="{StaticResource TransparentBrush}" />
						<Rectangle
							x:Name="Thumb"
							Width="8"
							Fill="{StaticResource VScrollbarThumbBackgroundBrush}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup
								x:Name="CommonStates">
								<VisualState
									x:Name="Normal" />
								<VisualState
									x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="Thumb"
											Storyboard.TargetProperty="Fill"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0"
												Value="{StaticResource VScrollbarThumbHoverBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="Thumb"
											Storyboard.TargetProperty="Fill"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0"
												Value="{StaticResource VScrollbarThumbPressedBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="Thumb"
											Storyboard.TargetProperty="Fill"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0"
												Value="{StaticResource VScrollbarThumbDisabledBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		x:Key="ScrollBarStyle"
		TargetType="{x:Type ScrollBar}">
		<Setter
			Property="Stylus.IsPressAndHoldEnabled"
			Value="False" />
		<Setter
			Property="Stylus.IsFlicksEnabled"
			Value="False" />
		<Setter
			Property="Width"
			Value="30" />
		<Setter
			Property="MinWidth"
			Value="30" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ScrollBar}">
					<Grid
						x:Name="Bg"
						SnapsToDevicePixels="True">
						<Grid.RowDefinitions>
							<RowDefinition
								Height="30" />
							<RowDefinition
								Height="0.00001*" />
							<RowDefinition
								Height="30" />
						</Grid.RowDefinitions>
						<Rectangle
							Grid.RowSpan="3"
							Margin="0"
							Fill="{DynamicResource BackgroundSecondary}" />
						<RepeatButton
							x:Name="repeatButton"
							HorizontalAlignment="Center"
							Command="{x:Static ScrollBar.LineUpCommand}"
							IsEnabled="True"
							Style="{StaticResource ScrollBarButtonStyle}" />
						<Track
							x:Name="PART_Track"
							Grid.Row="1"
							IsDirectionReversed="True"
							IsEnabled="True">
							<Track.DecreaseRepeatButton>
								<RepeatButton
									Command="{x:Static ScrollBar.PageUpCommand}"
									Style="{StaticResource ScrollBarPageButtonStyle}" />
							</Track.DecreaseRepeatButton>
							<Track.IncreaseRepeatButton>
								<RepeatButton
									Command="{x:Static ScrollBar.PageDownCommand}"
									Style="{StaticResource ScrollBarPageButtonStyle}" />
							</Track.IncreaseRepeatButton>
							<Track.Thumb>
								<Thumb
									x:Name="thumb"
									Width="30"
									HorizontalAlignment="Center"
									Style="{StaticResource VScrollBarThumbStyle}" />
							</Track.Thumb>
						</Track>
						<RepeatButton
							x:Name="repeatButton1"
							Grid.Row="2"
							HorizontalAlignment="Center"
							Command="{x:Static ScrollBar.LineDownCommand}"
							IsEnabled="True"
							RenderTransformOrigin="0.5,0.5"
							Style="{StaticResource ScrollBarButtonStyle}">
							<UIElement.RenderTransform>
								<TransformGroup>
									<ScaleTransform />
									<SkewTransform />
									<RotateTransform
										Angle="180" />
									<TranslateTransform />
								</TransformGroup>
							</UIElement.RenderTransform>
						</RepeatButton>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup
								x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition
										GeneratedDuration="0:0:0.3" />
								</VisualStateGroup.Transitions>
								<VisualState
									x:Name="Normal" />
								<VisualState
									x:Name="MouseOver" />
								<VisualState
									x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetName="repeatButton"
											Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame
												KeyTime="0"
												Value="0.6" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetName="repeatButton1"
											Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame
												KeyTime="0"
												Value="0.6" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetName="thumb"
											Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame
												KeyTime="0"
												Value="0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger
				Property="ScrollBar.Orientation"
				Value="Horizontal">
				<Setter
					Property="Width"
					Value="Auto" />
				<Setter
					Property="MinWidth"
					Value="0" />
				<Setter
					Property="Height"
					Value="30" />
				<Setter
					Property="MinHeight"
					Value="30" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ScrollBar}">
							<Grid
								x:Name="Bg"
								SnapsToDevicePixels="True">
								<Grid.ColumnDefinitions>
									<ColumnDefinition
										Width="30" />
									<ColumnDefinition
										Width="0.00001*" />
									<ColumnDefinition
										Width="30" />
								</Grid.ColumnDefinitions>
								<Rectangle
									Grid.ColumnSpan="5"
									Fill="{DynamicResource BackgroundSecondary}" />
								<RepeatButton
									x:Name="repeatButton"
									VerticalAlignment="Center"
									Command="{x:Static ScrollBar.LineLeftCommand}"
									IsEnabled="True"
									Opacity="1"
									RenderTransformOrigin="0.5,0.5"
									Style="{DynamicResource ScrollBarButtonStyle}">
									<UIElement.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform
												Angle="-90" />
											<TranslateTransform />
										</TransformGroup>
									</UIElement.RenderTransform>
								</RepeatButton>
								<Track
									x:Name="PART_Track"
									Grid.Column="1"
									IsEnabled="True">
									<Track.DecreaseRepeatButton>
										<RepeatButton
											Command="{x:Static ScrollBar.PageLeftCommand}"
											Style="{StaticResource ScrollBarPageButtonStyle}" />
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton
											Command="{x:Static ScrollBar.PageRightCommand}"
											Style="{StaticResource ScrollBarPageButtonStyle}" />
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb
											Height="30"
											VerticalAlignment="Center"
											Style="{StaticResource HScrollBarThumbStyle}" />
									</Track.Thumb>
								</Track>
								<RepeatButton
									x:Name="repeatButton1"
									Grid.Column="2"
									VerticalAlignment="Center"
									Command="{x:Static ScrollBar.LineRightCommand}"
									IsEnabled="True"
									Opacity="1"
									RenderTransformOrigin="0.5,0.5"
									Style="{DynamicResource ScrollBarButtonStyle}">
									<UIElement.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform
												Angle="90" />
											<TranslateTransform />
										</TransformGroup>
									</UIElement.RenderTransform>
								</RepeatButton>
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup
										x:Name="CommonStates">
										<VisualStateGroup.Transitions>
											<VisualTransition
												GeneratedDuration="0:0:0.3" />
										</VisualStateGroup.Transitions>
										<VisualState
											x:Name="Normal" />
										<VisualState
											x:Name="MouseOver">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames
													Storyboard.TargetName="repeatButton"
													Storyboard.TargetProperty="(UIElement.Opacity)">
													<EasingDoubleKeyFrame
														KeyTime="0"
														Value="1" />
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames
													Storyboard.TargetName="repeatButton1"
													Storyboard.TargetProperty="(UIElement.Opacity)">
													<EasingDoubleKeyFrame
														KeyTime="0"
														Value="1" />
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState
											x:Name="Disabled" />
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style
		x:Key="ScrollViewerStyle"
		TargetType="{x:Type ScrollViewer}">
		<Setter
			Property="Foreground"
			Value="{DynamicResource ForegroundMain}" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Left" />
		<Setter
			Property="VerticalContentAlignment"
			Value="Top" />
		<Setter
			Property="VerticalScrollBarVisibility"
			Value="Auto" />
		<Setter
			Property="Padding"
			Value="0" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ScrollViewer}">
					<Grid
						x:Name="Grid">
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								Width="*" />
							<ColumnDefinition
								Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition
								Height="*" />
							<RowDefinition
								Height="Auto" />
						</Grid.RowDefinitions>
						<ScrollContentPresenter
							x:Name="PART_ScrollContentPresenter"
							Grid.Row="0"
							Grid.Column="0"
							Margin="{TemplateBinding Control.Padding}"
							CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
							CanHorizontallyScroll="False"
							CanVerticallyScroll="False"
							Content="{TemplateBinding ContentControl.Content}"
							ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" />
						<Rectangle
							Grid.Row="1"
							Grid.Column="1"
							Fill="{DynamicResource BackgroundSecondary}" />
						<ScrollBar
							x:Name="PART_VerticalScrollBar"
							Grid.Row="0"
							Grid.Column="1"
							AutomationProperties.AutomationId="VerticalScrollBar"
							Cursor="Arrow"
							Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
							Minimum="0"
							ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
							Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
							Style="{StaticResource ScrollBarStyle}"
							Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
						<ScrollBar
							x:Name="PART_HorizontalScrollBar"
							Grid.Row="1"
							Grid.Column="0"
							AutomationProperties.AutomationId="HorizontalScrollBar"
							Cursor="Arrow"
							Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
							Minimum="0"
							Orientation="Horizontal"
							ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
							Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
							Style="{StaticResource ScrollBarStyle}"
							Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate
		x:Key="TextBoxValidationToolTipTemplate">
		<Grid
			x:Name="Root"
			Margin="5,0"
			Opacity="0"
			RenderTransformOrigin="0,0">
			<UIElement.RenderTransform>
				<TranslateTransform
					x:Name="xform"
					X="-25" />
			</UIElement.RenderTransform>
			<Border
				Margin="4,4,-4,-4"
				Opacity="0.02"
				Background="{StaticResource ValidationToolTipTemplateShadowBrush}" />
			<Border
				Margin="3,3,-3,-3"
				Opacity="0.08"
				Background="{StaticResource ValidationToolTipTemplateShadowBrush}" />
			<Border
				Margin="2,2,-2,-2"
				Opacity="0.15"
				Background="{StaticResource ValidationToolTipTemplateShadowBrush}" />
			<Border
				Margin="1,1,-1,-1"
				Opacity="0.21"
				Background="{StaticResource ValidationToolTipTemplateShadowBrush}" />
			<Border
				Background="{StaticResource ValidationErrorElement}" />
			<Border>
				<TextBlock
					MaxWidth="250"
					Margin="8,4,8,4"
					TextWrapping="Wrap"
					UseLayoutRounding="False"
					Foreground="{StaticResource LightForegroundBrush}"
					Text="{Binding (Validation.Errors).CurrentItem.ErrorContent}" />
			</Border>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup
					x:Name="OpenStates">
					<VisualStateGroup.Transitions>
						<VisualTransition
							GeneratedDuration="0" />
						<VisualTransition
							GeneratedDuration="0:0:0.2"
							To="Open">
							<Storyboard>
								<DoubleAnimation
									Storyboard.TargetName="xform"
									Storyboard.TargetProperty="X"
									To="0"
									Duration="0:0:0.2">
									<DoubleAnimation.EasingFunction>
										<BackEase
											Amplitude=".3"
											EasingMode="EaseOut" />
									</DoubleAnimation.EasingFunction>
								</DoubleAnimation>
								<DoubleAnimation
									Storyboard.TargetName="Root"
									Storyboard.TargetProperty="Opacity"
									To="1"
									Duration="0:0:0.2" />
							</Storyboard>
						</VisualTransition>
					</VisualStateGroup.Transitions>
					<VisualState
						x:Name="Closed">
						<Storyboard>
							<DoubleAnimation
								Storyboard.TargetName="Root"
								Storyboard.TargetProperty="Opacity"
								To="0"
								Duration="0" />
						</Storyboard>
					</VisualState>
					<VisualState
						x:Name="Open">
						<Storyboard>
							<DoubleAnimation
								Storyboard.TargetName="xform"
								Storyboard.TargetProperty="X"
								To="0"
								Duration="0" />
							<DoubleAnimation
								Storyboard.TargetName="Root"
								Storyboard.TargetProperty="Opacity"
								To="1"
								Duration="0" />
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
		</Grid>
	</ControlTemplate>
	<Style
		x:Key="ComboBoxEditableTextBoxStyle"
		TargetType="{x:Type TextBox}">
		<Setter
			Property="Foreground"
			Value="{DynamicResource ForegroundMain}" />
		<Setter
			Property="FontSize"
			Value="12" />
		<Setter
			Property="FontFamily"
			Value="Consolas" />
		<Setter
			Property="FrameworkElement.OverridesDefaultStyle"
			Value="True" />
		<Setter
			Property="UIElement.AllowDrop"
			Value="True" />
		<Setter
			Property="MinWidth"
			Value="0" />
		<Setter
			Property="MinHeight"
			Value="30" />
		<Setter
			Property="Padding"
			Value="6,4" />
		<Setter
			Property="FrameworkElement.FocusVisualStyle"
			Value="{x:Null}" />
		<Setter
			Property="TextBoxBase.SelectionBrush"
			Value="{StaticResource TextBoxFocusedBrush}" />
		<Setter
			Property="TextBoxBase.SelectionOpacity"
			Value="0.4" />
		<Setter
			Property="TextBoxBase.CaretBrush"
			Value="{DynamicResource ForegroundMain}" />
		<Setter
			Property="FrameworkElement.ContextMenu"
			Value="{StaticResource MahApps.TextBox.ContextMenu}" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type TextBox}">
					<ScrollViewer
						x:Name="PART_ContentHost"
						Background="#00FFFFFF"
						Focusable="False"
						HorizontalScrollBarVisibility="Hidden"
						VerticalScrollBarVisibility="Hidden"
						Style="{StaticResource ScrollViewerStyle}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup
								x:Name="CommonStates">
								<VisualState
									x:Name="Normal" />
								<VisualState
									x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames
											Storyboard.TargetName="PART_ContentHost"
											Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame
												KeyTime="0"
												Value="0.3" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="ReadOnly" />
								<VisualState
									x:Name="MouseOver" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</ScrollViewer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate
		x:Key="ComboBoxEditableTemplate"
		TargetType="{x:Type ComboBox}">
		<Grid
			x:Name="MainGrid"
			SnapsToDevicePixels="True">
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width="*" />
				<ColumnDefinition
					Width="Auto" />
			</Grid.ColumnDefinitions>
			<Rectangle
				x:Name="normal"
				Grid.ColumnSpan="2"
				StrokeThickness="1"
				Fill="{StaticResource ComboBoxBackgroundBrush}"
				Stroke="{StaticResource ComboBoxBorderBrush}" />
			<Rectangle
				x:Name="hover"
				Grid.ColumnSpan="2"
				StrokeThickness="1"
				Visibility="Collapsed"
				Fill="{StaticResource ComboBoxHoverBackgroundBrush}"
				Stroke="{StaticResource ComboBoxHoverBorderBrush}" />
			<Popup
				x:Name="PART_Popup"
				Grid.ColumnSpan="2"
				Margin="1"
				AllowsTransparency="True"
				Placement="Bottom"
				PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
				IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
				<Border
					x:Name="DropDownBorder"
					MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
					HorizontalAlignment="Stretch"
					BorderThickness="1"
					CornerRadius="2"
					Background="{StaticResource PopupBackgroundBrush}"
					BorderBrush="{StaticResource PopupBorderBrush}"
					MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
					<ScrollViewer
						x:Name="DropDownScrollViewer"
						Style="{StaticResource ScrollViewerStyle}">
						<Grid
							RenderOptions.ClearTypeHint="Enabled">
							<Canvas
								Width="0"
								Height="0"
								HorizontalAlignment="Left"
								VerticalAlignment="Top">
								<Rectangle
									x:Name="OpaqueRect"
									Width="{Binding ActualWidth, ElementName=DropDownBorder}"
									Height="{Binding ActualHeight, ElementName=DropDownBorder}"
									Fill="{Binding Background, ElementName=DropDownBorder}" />
							</Canvas>
							<ItemsPresenter
								x:Name="ItemsPresenter"
								KeyboardNavigation.DirectionalNavigation="Contained"
								SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
						</Grid>
					</ScrollViewer>
				</Border>
			</Popup>
			<ToggleButton
				Grid.Column="0"
				Background="{TemplateBinding Control.Background}"
				BorderBrush="{TemplateBinding Control.BorderBrush}"
				Style="{StaticResource ComboBoxToggleButtonStyle}"
				IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
			<TextBox
				x:Name="PART_EditableTextBox"
				Margin="0,0,31,0"
				HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
				VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
				Style="{StaticResource ComboBoxEditableTextBoxStyle}"
				IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" />
			<Rectangle
				x:Name="focused"
				Grid.ColumnSpan="2"
				StrokeThickness="1"
				Visibility="Collapsed"
				Stroke="{StaticResource ComboBoxFocusedBorderBrush}" />
			<Rectangle
				x:Name="disabled"
				Grid.ColumnSpan="2"
				Visibility="Collapsed"
				Fill="{StaticResource ComboBoxDisabledBackgroundBrush}" />
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup
					x:Name="CommonStates">
					<VisualState
						x:Name="Normal" />
					<VisualState
						x:Name="MouseOver">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames
								Storyboard.TargetName="hover"
								Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame
									KeyTime="0">
									<ObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</ObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState
						x:Name="Disabled">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames
								Storyboard.TargetName="disabled"
								Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame
									KeyTime="0">
									<ObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</ObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup
					x:Name="FocusStates">
					<VisualState
						x:Name="Unfocused" />
					<VisualState
						x:Name="Focused">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames
								Storyboard.TargetName="focused"
								Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame
									KeyTime="0">
									<ObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</ObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState
						x:Name="FocusedDropDown">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames
								Storyboard.TargetName="focused"
								Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame
									KeyTime="0">
									<ObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</ObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger
				Property="ItemsControl.HasItems"
				Value="False">
				<Setter
					TargetName="DropDownBorder"
					Property="FrameworkElement.Height"
					Value="95" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style
		x:Key="ComboBoxStyle"
		TargetType="{x:Type ComboBox}">
		<Setter
			Property="Padding"
			Value="6,1,6,3" />
		<Setter
			Property="Margin"
			Value="0" />
		<Setter
			Property="FontSize"
			Value="12" />
		<Setter
			Property="FontFamily"
			Value="Consolas" />
		<Setter
			Property="MinHeight"
			Value="30" />
		<Setter
			Property="Foreground"
			Value="{DynamicResource ForegroundMain}" />
		<Setter
			Property="Background"
			Value="{DynamicResource BackgroundSecondary}" />
		<Setter
			Property="BorderBrush"
			Value="{StaticResource ComboBoxBorderBrush}" />
		<Setter
			Property="ItemContainerStyle"
			Value="{StaticResource ComboBoxItemStyle}" />
		<Setter
			Property="ScrollViewer.HorizontalScrollBarVisibility"
			Value="Auto" />
		<Setter
			Property="ScrollViewer.VerticalScrollBarVisibility"
			Value="Auto" />
		<Setter
			Property="ScrollViewer.CanContentScroll"
			Value="True" />
		<Setter
			Property="ScrollViewer.PanningMode"
			Value="Both" />
		<Setter
			Property="Stylus.IsFlicksEnabled"
			Value="False" />
		<Setter
			Property="VerticalContentAlignment"
			Value="Center" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ComboBox}">
					<Grid
						x:Name="MainGrid"
						SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								Width="*" />
							<ColumnDefinition
								Width="0"
								MinWidth="30" />
						</Grid.ColumnDefinitions>
						<Rectangle
							x:Name="normal"
							Grid.ColumnSpan="2"
							StrokeThickness="1"
							Fill="{StaticResource ComboBoxBackgroundBrush}"
							Stroke="{StaticResource ComboBoxBorderBrush}" />
						<Rectangle
							x:Name="hover"
							Grid.ColumnSpan="2"
							StrokeThickness="1"
							Visibility="Collapsed"
							Fill="{StaticResource ComboBoxHoverBackgroundBrush}"
							Stroke="{StaticResource ComboBoxHoverBorderBrush}" />
						<Popup
							x:Name="PART_Popup"
							Grid.ColumnSpan="2"
							Margin="1"
							AllowsTransparency="True"
							Placement="Bottom"
							PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
							IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
							<Border
								x:Name="DropDownBorder"
								MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
								HorizontalAlignment="Stretch"
								BorderThickness="1"
								CornerRadius="2"
								Background="{StaticResource PopupBackgroundBrush}"
								BorderBrush="{StaticResource PopupBorderBrush}"
								MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
								<ScrollViewer
									x:Name="DropDownScrollViewer"
									Style="{StaticResource ScrollViewerStyle}">
									<Grid
										RenderOptions.ClearTypeHint="Enabled">
										<Canvas
											Width="0"
											Height="0"
											HorizontalAlignment="Left"
											VerticalAlignment="Top">
											<Rectangle
												x:Name="OpaqueRect"
												Width="{Binding ActualWidth, ElementName=DropDownBorder}"
												Height="{Binding ActualHeight, ElementName=DropDownBorder}"
												Fill="{Binding Background, ElementName=DropDownBorder}" />
										</Canvas>
										<ItemsPresenter
											x:Name="ItemsPresenter"
											KeyboardNavigation.DirectionalNavigation="Contained"
											SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
									</Grid>
								</ScrollViewer>
							</Border>
						</Popup>
						<ToggleButton
							Grid.ColumnSpan="2"
							Background="{TemplateBinding Control.Background}"
							BorderBrush="{TemplateBinding Control.BorderBrush}"
							Style="{StaticResource ComboBoxToggleButtonStyle}"
							IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
						<ContentControl
							x:Name="contentControl"
							Margin="{TemplateBinding Control.Padding}"
							HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
							Foreground="{TemplateBinding Control.Foreground}"
							IsHitTestVisible="False">
							<ContentPresenter
								HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
								Content="{TemplateBinding ComboBox.SelectionBoxItem}"
								ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
								ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
								ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
								SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
						</ContentControl>
						<Rectangle
							x:Name="focused"
							Grid.ColumnSpan="2"
							StrokeThickness="1"
							Visibility="Collapsed"
							Stroke="{StaticResource ComboBoxFocusedBorderBrush}" />
						<Rectangle
							x:Name="disabled"
							Grid.ColumnSpan="2"
							Visibility="Collapsed"
							Fill="{StaticResource ComboBoxDisabledBackgroundBrush}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup
								x:Name="CommonStates">
								<VisualState
									x:Name="Normal" />
								<VisualState
									x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="hover"
											Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="contentControl"
											Storyboard.TargetProperty="Foreground"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0"
												Value="{StaticResource LightForegroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="disabled"
											Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup
								x:Name="FocusStates">
								<VisualState
									x:Name="Unfocused" />
								<VisualState
									x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="focused"
											Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="FocusedDropDown">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="focused"
											Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger
							Property="ItemsControl.HasItems"
							Value="False">
							<Setter
								TargetName="DropDownBorder"
								Property="Height"
								Value="95" />
						</Trigger>
						<Trigger
							Property="IsEnabled"
							Value="False">
							<Setter
								Property="Foreground"
								Value="{StaticResource ForegroundBrush}" />
							<Setter
								Property="Background"
								Value="{StaticResource ComboBoxBackgroundBrush}" />
						</Trigger>
						<Trigger
							Property="ItemsControl.IsGrouping"
							Value="True">
							<Setter
								Property="ScrollViewer.CanContentScroll"
								Value="False" />
						</Trigger>
						<Trigger
							SourceName="DropDownScrollViewer"
							Property="ScrollViewer.CanContentScroll"
							Value="False">
							<Setter
								TargetName="OpaqueRect"
								Property="Canvas.Top"
								Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
							<Setter
								TargetName="OpaqueRect"
								Property="Canvas.Left"
								Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger
				Property="ComboBox.IsEditable"
				Value="True">
				<Setter
					Property="IsTabStop"
					Value="False" />
				<Setter
					Property="Padding"
					Value="0" />
				<Setter
					Property="Template"
					Value="{StaticResource ComboBoxEditableTemplate}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style
		x:Key="TextBoxStyle"
		TargetType="{x:Type TextBox}">
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="Foreground"
			Value="{DynamicResource ForegroundMain}" />
		<Setter
			Property="FontSize"
			Value="12" />
		<Setter
			Property="FontFamily"
			Value="Consolas" />
		<Setter
			Property="Background"
			Value="{DynamicResource BackgroundSecondary}" />
		<Setter
			Property="BorderBrush"
			Value="{StaticResource TextBoxBorderBrush}" />
		<Setter
			Property="MinHeight"
			Value="30" />
		<Setter
			Property="Padding"
			Value="6,3" />
		<Setter
			Property="TextBoxBase.SelectionBrush"
			Value="{StaticResource TextBoxFocusedBrush}" />
		<Setter
			Property="Validation.ErrorTemplate"
			Value="{StaticResource TextBoxValidationToolTipTemplate}" />
		<Setter
			Property="VerticalContentAlignment"
			Value="Center" />
		<Setter
			Property="FrameworkElement.ContextMenu"
			Value="{StaticResource MahApps.TextBox.ContextMenu}" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type TextBox}">
					<Grid
						x:Name="RootElement"
						SnapsToDevicePixels="True">
						<Border
							x:Name="Border"
							Background="{TemplateBinding Control.Background}"
							BorderBrush="{TemplateBinding Control.BorderBrush}"
							BorderThickness="{TemplateBinding Control.BorderThickness}"
							Opacity="1">
							<Grid>
								<Border
									x:Name="ReadOnlyVisualElement"
									Background="{DynamicResource BackgroundSecondary}"
									Opacity="0" />
								<ScrollViewer
									x:Name="PART_ContentHost"
									Padding="{TemplateBinding Control.Padding}"
									BorderThickness="0"
									IsTabStop="False" />
							</Grid>
						</Border>
						<Border
							x:Name="DisabledVisualElement"
							BorderThickness="{TemplateBinding Control.BorderThickness}"
							IsHitTestVisible="False"
							Opacity="0"
							Background="{StaticResource DisabledVisualElement}"
							BorderBrush="{StaticResource DisabledVisualElement}" />
						<Border
							x:Name="FocusVisualElement"
							BorderThickness="{TemplateBinding Control.BorderThickness}"
							IsHitTestVisible="False"
							Opacity="0"
							BorderBrush="{StaticResource TextBoxFocusedBrush}" />
						<Border
							x:Name="ValidationErrorElement"
							BorderThickness="{TemplateBinding Control.BorderThickness}"
							Visibility="Collapsed"
							BorderBrush="{StaticResource ValidationErrorElement}">
							<ToolTipService.ToolTip>
								<ToolTip
									x:Name="validationTooltip"
									Placement="Right"
									Template="{StaticResource TextBoxValidationToolTipTemplate}"
									DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
							</ToolTipService.ToolTip>
							<Grid
								Width="12"
								Height="12"
								Margin="1,-4,-4,0"
								HorizontalAlignment="Right"
								VerticalAlignment="Top"
								Background="#00FFFFFF">
								<Path
									Margin="1,3,0,0"
									Data="M1,0 L6,0 A2,2 90 0 1 8,2L8,7 Z"
									Fill="{StaticResource ValidationErrorElement}" />
								<Path
									Margin="1,3,0,0"
									Data="M0,0 L2,0 L8,6 L8,8"
									Fill="{StaticResource LightForegroundBrush}" />
							</Grid>
						</Border>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup
								x:Name="CommonStates">
								<VisualState
									x:Name="Normal" />
								<VisualState
									x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="Border"
											Storyboard.TargetProperty="BorderBrush"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0"
												Value="{StaticResource TextBoxHoverBorderBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="Border"
											Storyboard.TargetProperty="Background"
											Duration="0">
											<DiscreteObjectKeyFrame
												KeyTime="0"
												Value="{DynamicResource BackgroundMain}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="DisabledVisualElement"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="ReadOnly">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="ReadOnlyVisualElement"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup
								x:Name="FocusStates">
								<VisualState
									x:Name="Focused">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="FocusVisualElement"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="Unfocused">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="FocusVisualElement"
											Storyboard.TargetProperty="Opacity"
											To="0"
											Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup
								x:Name="ValidationStates">
								<VisualState
									x:Name="Valid" />
								<VisualState
									x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ValidationErrorElement"
											Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ValidationErrorElement"
											Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="validationTooltip"
											Storyboard.TargetProperty="IsOpen">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		x:Key="ListBoxStyle"
		TargetType="{x:Type ListBox}">
		<Setter
			Property="Padding"
			Value="0" />
		<Setter
			Property="Background"
			Value="{StaticResource ListBoxBackgroundBrush}" />
		<Setter
			Property="BorderBrush"
			Value="{StaticResource ListBoxBorderBrush}" />
		<Setter
			Property="Foreground"
			Value="{StaticResource ForegroundBrush}" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Left" />
		<Setter
			Property="VerticalContentAlignment"
			Value="Top" />
		<Setter
			Property="IsTabStop"
			Value="False" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="ItemContainerStyle"
			Value="{StaticResource ListBoxItemStyle}" />
		<Setter
			Property="ScrollViewer.HorizontalScrollBarVisibility"
			Value="Auto" />
		<Setter
			Property="ScrollViewer.VerticalScrollBarVisibility"
			Value="Auto" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ListBox}">
					<Grid>
						<Border
							Background="{TemplateBinding Control.Background}"
							BorderBrush="{TemplateBinding Control.BorderBrush}"
							BorderThickness="{TemplateBinding Control.BorderThickness}">
							<ScrollViewer
								x:Name="ScrollViewer"
								Padding="{TemplateBinding Control.Padding}"
								BorderThickness="0"
								Style="{StaticResource ScrollViewerStyle}">
								<ItemsPresenter />
							</ScrollViewer>
						</Border>
						<Border
							x:Name="ValidationErrorElement"
							BorderThickness="{TemplateBinding Control.BorderThickness}"
							CornerRadius="2"
							Visibility="Collapsed"
							BorderBrush="{StaticResource ValidationErrorElement}">
							<ToolTipService.ToolTip>
								<ToolTip
									x:Name="validationTooltip"
									Placement="Right"
									Template="{StaticResource ValidationToolTipTemplate}"
									DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
									<FrameworkElement.Triggers>
										<EventTrigger
											RoutedEvent="Canvas.Loaded">
											<BeginStoryboard>
												<Storyboard>
													<ObjectAnimationUsingKeyFrames
														Storyboard.TargetName="validationTooltip"
														Storyboard.TargetProperty="IsHitTestVisible">
														<DiscreteObjectKeyFrame
															KeyTime="0">
															<ObjectKeyFrame.Value>
																<System:Boolean>true</System:Boolean>
															</ObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
									</FrameworkElement.Triggers>
								</ToolTip>
							</ToolTipService.ToolTip>
							<Grid
								Width="10"
								Height="10"
								Margin="0,-4,-4,0"
								HorizontalAlignment="Right"
								VerticalAlignment="Top"
								Background="{StaticResource TransparentBrush}">
								<Path
									Margin="-1,3,0,0"
									Data="M1,0 L6,0 A2,2 90 0 1 8,2L8,7 Z"
									Fill="{StaticResource ValidationErrorElement}" />
								<Path
									Margin="-1,3,0,0"
									Data="M0,0 L2,0 L8,6 L8,8"
									Fill="{StaticResource LightForegroundBrush}" />
							</Grid>
						</Border>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup
								x:Name="ValidationStates">
								<VisualState
									x:Name="Valid" />
								<VisualState
									x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ValidationErrorElement"
											Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ValidationErrorElement"
											Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="validationTooltip"
											Storyboard.TargetProperty="IsOpen">
											<DiscreteObjectKeyFrame
												KeyTime="0">
												<ObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
